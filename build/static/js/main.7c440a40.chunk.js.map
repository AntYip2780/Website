{"version":3,"sources":["Child.js","Sorting.js","Search.js","Scroll.js","Parent.js","reportWebVitals.js","index.js"],"names":["Child","alias","age","className","src","alt","Sorting","filer","filtera","map","robots","i","name","email","Search","searchChange","type","placeholder","onChange","Scroll","props","children","Parent","search","event","setState","target","value","state","fetch","then","response","json","data","this","filter","robo","includes","Fragment","sear","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8PAceA,EAXD,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACnB,OACI,cAAC,WAAD,UACE,sBAAKC,UAAU,MAAf,UACA,qBAAKC,IAAG,+BAA4BH,GAASI,IAAM,WACnD,sCAASJ,KACT,wCAAWC,WCINI,EAVC,SAAC,GAAe,IACtBC,EADqB,EAAbC,QACQC,KAAI,SAACC,EAAQC,GAC/B,OAAO,cAAC,EAAD,CAAiBV,MAASS,EAAOE,KAAMV,IAAOQ,EAAOG,OAAvCF,MAEzB,OACE,cAAC,WAAD,UACIJ,KCDKO,EANA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACb,OACI,uBAAOC,KAAO,SAASJ,KAAO,SAASK,YAAc,SAASC,SAAUH,KCQjEI,G,MAVA,SAACC,GACZ,OACI,cAAC,WAAD,UACI,qBAAKjB,UAAU,MAAf,SACKiB,EAAMC,eC2BJC,E,kDA5Bf,aAAe,IAAD,8BACV,gBASJC,OAAS,SAACC,GACN,EAAKC,SAAS,CAACF,OAAQC,EAAME,OAAOC,SATpC,EAAKC,MAAQ,CACTlB,OAAQ,GACRa,OAAQ,IAJF,E,qDAOd,WAAqB,IAAD,OAChBM,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAI,EAAKR,SAAS,CAACf,OAAQuB,S,oBAK9H,WAAU,IAAD,OACC1B,EAAQ2B,KAAKN,MAAMlB,OAAOyB,QAAO,SAAAC,GAAI,OACtCA,EAAKxB,KAAKyB,SAAS,EAAKT,MAAML,WAEnC,OACG,eAAC,IAAMe,SAAP,WACI,cAAC,EAAD,CAAQC,KAAQL,KAAKX,SACrB,cAAC,EAAD,UACA,cAAC,EAAD,CAASf,QAAWD,a,GAtBdiC,IAAMC,WCQZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.7c440a40.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport './Child.css'\r\n\r\nconst Child = ({alias, age}) => {\r\n    return (\r\n        <Fragment>\r\n          <div className=\"hot\">\r\n          <img src = {`https://robohash.org/${alias}`} alt = \"Robots\"/>\r\n          <p>Name:{alias}</p>\r\n          <p>Email: {age}</p>\r\n          </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Child;","import React, {Fragment} from 'react';\r\nimport Child from './Child';\r\n\r\nconst Sorting = ({filtera}) => {\r\n    const filer = filtera.map((robots, i) => {\r\n        return <Child key = {i} alias = {robots.name} age = {robots.email}/>\r\n    })\r\n    return (\r\n      <Fragment>\r\n         {filer}\r\n      </Fragment>\r\n    )\r\n}\r\nexport default Sorting;","import React from 'react';\r\n\r\nconst Search = ({searchChange}) => {\r\n    return (\r\n        <input type = \"search\" name = \"search\" placeholder = \"Search\" onChange={searchChange}/>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, {Fragment} from 'react';\r\nimport './Scroll.css'\r\nconst Scroll = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"Rig\">\r\n                {props.children}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport Sorting from './Sorting'\r\nimport Search from './Search'\r\nimport Scroll from './Scroll';\r\nclass Parent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            search: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => this.setState({robots: data}));\r\n    }\r\n    search = (event) => {\r\n        this.setState({search: event.target.value});\r\n    }\r\n    render() {\r\n        const filer = this.state.robots.filter(robo => \r\n             robo.name.includes(this.state.search)\r\n        )\r\n        return (\r\n           <React.Fragment>\r\n               <Search sear = {this.search} />\r\n               <Scroll>\r\n               <Sorting filtera = {filer}/>\r\n               </Scroll>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n    }\r\n\r\n    export default Parent;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Parent from './Parent';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Parent />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}